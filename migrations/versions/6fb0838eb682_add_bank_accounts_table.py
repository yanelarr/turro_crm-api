"""add bank accounts table

Revision ID: 6fb0838eb682
Revises: c70b7ace77a0
Create Date: 2023-04-12 12:52:54.030760

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6fb0838eb682'
down_revision = 'c70b7ace77a0'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('banks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('addres', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.String(length=50), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='resources'
    )
    op.create_table('currencies',
    sa.Column('code', sa.String(length=3), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.String(length=50), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('code'),
    schema='resources'
    )
    op.create_table('bank_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=300), nullable=False),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('bank_id', sa.Integer, nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.String(length=50), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['bank_id'], ['resources.banks.id'], ),
    sa.ForeignKeyConstraint(['currency_code'], ['resources.currencies.code'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number'),
    schema='resources'
    )
    op.add_column('partners', sa.Column('addres', sa.Text(), nullable=True), schema='partner')
    op.create_foreign_key(None, 'partners_contacts', 'partners', ['id_partner'], ['id'], source_schema='partner', referent_schema='partner')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'partners_contacts', schema='partner', type_='foreignkey')
    op.create_foreign_key('partners_contacts_id_partner_fkey', 'partners_contacts', 'partners_old', ['id_partner'], ['id'], source_schema='partner', referent_schema='partner')
    op.alter_column('partners', 'selected',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               schema='partner')
    op.drop_column('partners', 'addres', schema='partner')
    op.alter_column('users', 'selected',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               schema='enterprise')
    op.alter_column('users', 'job',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               schema='enterprise')
    op.drop_constraint(None, 'contracts', schema='contract', type_='foreignkey')
    op.create_foreign_key('contracts_id_partner_fkey', 'contracts', 'partners_old', ['id_partner'], ['id'], source_schema='contract', referent_schema='partner')
    op.create_table('partners_versat',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=400), autoincrement=False, nullable=False),
    sa.Column('id_versat', sa.VARCHAR(length=60), autoincrement=False, nullable=True),
    sa.Column('cod_reup', sa.VARCHAR(length=60), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='partners_review_pkey1'),
    schema='partner'
    )
    op.create_table('partner_v',
    sa.Column('identidad', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('codigo', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('codigoreu', sa.VARCHAR(length=19), autoincrement=False, nullable=True),
    sa.Column('nombre', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('abreviatura', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('direccion', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('activo', postgresql.BIT(length=1), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('telefono', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('nit', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ircc', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('provincia', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('pais', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    schema='partner'
    )
    op.create_table('c_reup',
    sa.Column('reup', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('estado', sa.VARCHAR(length=1), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('reup', name='c_reup_pkey'),
    schema='siprec'
    )
    op.create_table('partners_old',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=400), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=400), autoincrement=False, nullable=True),
    sa.Column('dni', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=60), autoincrement=False, nullable=True),
    sa.Column('mobile', sa.VARCHAR(length=60), autoincrement=False, nullable=True),
    sa.Column('nit', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_provider', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('registration_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('registration_user', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('registration_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('selected', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='partners_pkey'),
    schema='partner'
    )
    op.drop_table('bank_accounts', schema='resources')
    op.drop_table('currencies', schema='resources')
    op.drop_table('banks', schema='resources')
    # ### end Alembic commands ###
